import express, { type Request, Response, NextFunction } from "express";
import { registerRoutes } from "./routes";
import { setupVite, serveStatic } from "./vite";
import { db } from "./database/connection";
import { scheduleBackups } from "./database/backup";
import { startBot } from "./telegram-bot";
import * as NodeJS from 'node:process';
import { setupDebugRoutes } from "./debug";
import { setupGlobalErrorHandlers, logError, errorHandler, notFoundHandler } from "./utils/error-handler";
import { spawn } from 'child_process';
import path from 'path';
import { fileURLToPath } from 'url';

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ä–∞—Å—á–µ—Ç–∞ –ø—É—Ç–∏ –∫ NFT-—Å–µ—Ä–≤–µ—Ä—É
const __dirname = path.dirname(fileURLToPath(import.meta.url));

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è NFT –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ä—Ç–µ—Ä
const nftImageServerPath = path.join(process.cwd(), 'start-nft-server.js');
const nftImageServer = spawn('node', [nftImageServerPath]);

nftImageServer.stdout.on('data', (data) => {
  console.log(`[NFT Image Server] ${data}`);
});

nftImageServer.stderr.on('data', (data) => {
  console.error(`[NFT Image Server ERROR] ${data}`);
});

nftImageServer.on('close', (code) => {
  console.log(`NFT Image Server exited with code ${code}`);
});

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
setupGlobalErrorHandlers();

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
process.on('uncaughtException', (error) => {
  console.error('üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê (uncaughtException):', error);
  logError(error);
  // –ù–µ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, —á—Ç–æ–±—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∞–ª–æ —Ä–∞–±–æ—Ç–∞—Ç—å
});

process.on('unhandledRejection', (reason: any, promise) => {
  console.error('üö® –ù–ï–û–ë–†–ê–ë–û–¢–ê–ù–ù–´–ô PROMISE (unhandledRejection):', reason);
  logError(reason instanceof Error ? reason : new Error(String(reason)));
  // –ù–µ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å, —á—Ç–æ–±—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–¥–æ–ª–∂–∞–ª–æ —Ä–∞–±–æ—Ç–∞—Ç—å
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGTERM', () => {
  console.log('üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–ª–∞–≤–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ...');
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—á–∏—Å—Ç–∫–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
});

process.on('SIGINT', () => {
  console.log('üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–ª–∞–≤–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ...');
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—á–∏—Å—Ç–∫–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
});

process.env.NODE_ENV = process.env.NODE_ENV || 'development';

const app = express();

// –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è free tier
app.use(express.json({ limit: '128kb' }));
app.use(express.urlencoded({ extended: false, limit: '128kb' }));

// –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é —Ä–∞–∑–¥–∞—á—É —Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–∞–ø–∫–∏ public
// –í–ê–ñ–ù–û: –≠—Ç–æ –¥–æ–ª–∂–Ω–æ –∏–¥—Ç–∏ –î–û –¥—Ä—É–≥–∏—Ö middleware –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
app.use(express.static('public', {
  index: false, // –ù–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å index.html
  etag: true,   // –í–∫–ª—é—á–∏—Ç—å ETag –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
  lastModified: true, // –í–∫–ª—é—á–∏—Ç—å Last-Modified –¥–ª—è –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
  setHeaders: (res, path) => {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ mime-—Ç–∏–ø—ã –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    if (path.endsWith('.png')) {
      res.setHeader('Content-Type', 'image/png');
    } else if (path.endsWith('.jpg') || path.endsWith('.jpeg')) {
      res.setHeader('Content-Type', 'image/jpeg');
    } else if (path.endsWith('.avif')) {
      res.setHeader('Content-Type', 'image/avif');
    }
  }
}));

// –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è BAYC NFT –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
app.use('/bayc_official', (req, res, next) => {
  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ –ø—Ä–æ–∫—Å–∏ NFT —Å–µ—Ä–≤–µ—Ä–∞
  console.log(`BAYC request: ${req.path}, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ NFT –ø—Ä–æ–∫—Å–∏ —Å–µ—Ä–≤–µ—Ä`);
  res.redirect(`/nft-proxy/bayc_official${req.path}`);
});

app.use('/nft_assets', express.static(path.join(__dirname, '../nft_assets')));

// –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π CORS –¥–ª—è Replit
app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Headers', 'Content-Type');
  if (req.method === 'OPTIONS') return res.sendStatus(200);
  next();
});

// –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
export interface ServerOptions {
  port?: number;
  host?: string;
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
export async function createServer(options?: ServerOptions) {
  try {
    console.log('Initializing database tables...');
    console.log('Database initialized successfully');

    console.log('üîÑ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ HTTP-—Å–µ—Ä–≤–µ—Ä–∞...');
    const server = await registerRoutes(app);
    
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤...');
    setupDebugRoutes(app);

    console.log('üíæ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è...');
    scheduleBackups();

    console.log('ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...');
    await startBot();

    console.log('üîå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Vite –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏–ª–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞–∑–¥–∞—á–∏...');
    if (process.env.NODE_ENV !== 'production') {
      await setupVite(app, server);
    } else {
      serveStatic(app);
    }
    
    console.log('üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –≥–æ—Ç–æ–≤–∏–º—Å—è –∫ –∑–∞–ø—É—Å–∫—É...');
    
    // –í–∫–ª—é—á–∞–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫ –ü–û–°–õ–ï –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Vite
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è 404 –æ—à–∏–±–æ–∫ (–º–∞—Ä—à—Ä—É—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã)
    app.use(notFoundHandler);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    app.use(errorHandler);

    // –í–∫–ª—é—á–∞–µ–º CORS –¥–ª—è development
    if (process.env.NODE_ENV !== 'production') {
      app.use((req, res, next) => {
        res.header('Access-Control-Allow-Origin', '*');
        res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');
        res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization');
        if (req.method === 'OPTIONS') {
          return res.sendStatus(200);
        }
        next();
      });
    }

    // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ä—Ç 5000 –¥–ª—è Replit
    const PORT = options?.port || 5000;
    const HOST = options?.host || "0.0.0.0";
    
    // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä —É–∂–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç –∫–∞–∫–æ–π-—Ç–æ –ø–æ—Ä—Ç, –∑–∞–∫—Ä—ã–≤–∞–µ–º –µ–≥–æ
    if (server.listening) {
      console.log(`‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}...`);
      server.close();
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—Ç—É
    console.log(`‚ö° –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É ${PORT} (${HOST})...`);
    
    // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ä—Ç —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ –¥–ª—è Replit
    if (process.env.REPL_ID) {
      console.log('üîí –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ä–µ–¥–∞ Replit, –±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ—Ä—Ç 5000...');
    }
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, –∑–∞–Ω–∏–º–∞—é—â–∏–µ –Ω—É–∂–Ω—ã–π –ø–æ—Ä—Ç
    try {
      import('node:net').then(netModule => {
        const netServer = netModule.createServer();
        netServer.once('error', (err: any) => {
          if (err.code === 'EADDRINUSE') {
            console.log(`üö® –ü–æ—Ä—Ç ${PORT} –∑–∞–Ω—è—Ç –¥—Ä—É–≥–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º...`);
          }
        });
        netServer.once('listening', () => {
          netServer.close();
        });
        netServer.listen(PORT, HOST);
      });
    } catch (e) {
      console.log(`üîÑ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–ø—É—Å–∫—É –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}...`);
    }
    
    // –ù–∞–∫–æ–Ω–µ—Ü, –∑–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ä–≤–µ—Ä
    server.listen(PORT, HOST, () => {
      console.log(`\n\nüöÄ –°–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
      console.log(`üì° –ê–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞: http://${HOST}:${PORT}`);
      console.log(`üîß –†–µ–∂–∏–º: ${process.env.NODE_ENV}`);
      console.log('üåê WebSocket —Å–µ—Ä–≤–µ—Ä –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω\n\n');
    }).on('error', (error) => {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}:`, error);
      
      if ((error as NodeJS.ErrnoException).code === 'EADDRINUSE') {
        console.log(`üîÑ –ü—ã—Ç–∞–µ–º—Å—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –ø–æ—Ä—Ç ${PORT}...`);
        server.close();
        setTimeout(() => {
          server.listen(PORT, HOST);
        }, 1000);
      } else {
        process.exit(1); // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å –æ—à–∏–±–∫–æ–π —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö
      }
    });
    
    return server;
  } catch (error) {
    console.error('Startup error:', error);
    process.exit(1);
  }
}

// –ï—Å–ª–∏ —ç—Ç–æ –≥–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å (–∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é), —Å–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–µ—Ä
if (import.meta.url === `file://${process.argv[1]}`) {
  console.log('üåü –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ index.ts');
  createServer();
}