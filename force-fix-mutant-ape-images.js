/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ Mutant Ape NFT
 * –ü–µ—Ä–µ—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø—É—Ç–∏ –∏ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, —á—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
 */
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import pg from 'pg';
const { Client } = pg;

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const client = new Client({
  connectionString: process.env.DATABASE_URL,
});

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –ø—É—Ç–µ–π
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const MUTANT_APE_DIR = path.join(process.cwd(), 'mutant_ape_nft');
const MUTANT_APE_OFFICIAL_DIR = path.join(process.cwd(), 'mutant_ape_official');
const MUTANT_APE_BACKUP_DIR = path.join(process.cwd(), 'mutant_ape_backup');
const IMAGE_PATH_PREFIX = '/mutant_ape_nft/';

/**
 * –°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
 */
async function backupMutantApeImages() {
  console.log('üì¶ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π Mutant Ape...');
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
  if (!fs.existsSync(MUTANT_APE_BACKUP_DIR)) {
    fs.mkdirSync(MUTANT_APE_BACKUP_DIR, { recursive: true });
  }
  
  // –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
  if (fs.existsSync(MUTANT_APE_DIR)) {
    const files = fs.readdirSync(MUTANT_APE_DIR);
    const imageFiles = files.filter(file => file.endsWith('.png') || file.endsWith('.jpg') || file.endsWith('.avif'));
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${imageFiles.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è`);
    
    for (const file of imageFiles) {
      const sourcePath = path.join(MUTANT_APE_DIR, file);
      const destPath = path.join(MUTANT_APE_BACKUP_DIR, file);
      
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±—ç–∫–∞–ø–µ
      if (fs.existsSync(destPath)) {
        continue;
      }
      
      try {
        // –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª
        fs.copyFileSync(sourcePath, destPath);
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${file}:`, error);
      }
    }
    
    console.log(`‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ ${imageFiles.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);
  } else {
    console.log(`‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${MUTANT_APE_DIR} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é`);
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
 */
function ensureDirectoriesExist() {
  // –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!fs.existsSync(MUTANT_APE_DIR)) {
    console.log(`–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é ${MUTANT_APE_DIR}...`);
    fs.mkdirSync(MUTANT_APE_DIR, { recursive: true });
  }
  
  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö Mutant Ape, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!fs.existsSync(MUTANT_APE_OFFICIAL_DIR)) {
    console.log(`–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é ${MUTANT_APE_OFFICIAL_DIR}...`);
    fs.mkdirSync(MUTANT_APE_OFFICIAL_DIR, { recursive: true });
  }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ NFT –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Mutant Ape –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 */
async function getMutantApeNFTs() {
  console.log('üîç –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ NFT –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Mutant Ape –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  
  // –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö NFT –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Mutant Ape
  const query = `
    SELECT n.id, n.token_id, n.image_path, n.name, c.name as collection_name
    FROM nfts n
    JOIN nft_collections c ON n.collection_id = c.id
    WHERE c.name LIKE '%Mutant%'
    ORDER BY n.token_id;
  `;
  
  const result = await client.query(query);
  const nfts = result.rows;
  
  console.log(`üìä –ü–æ–ª—É—á–µ–Ω–æ ${nfts.length} NFT –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Mutant Ape`);
  
  return nfts;
}

/**
 * –ü–µ—Ä–µ–º–µ—â–∞–µ—Ç –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è Mutant Ape –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –ø—É—Ç–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 */
async function fixMutantApeImagePaths(nfts) {
  console.log('üõ†Ô∏è –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º Mutant Ape...');
  
  let updatedCount = 0;
  
  for (const nft of nfts) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–º–µ—Ä —Ç–æ–∫–µ–Ω–∞
    const tokenId = parseInt(nft.token_id);
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
    // –î–ª—è —á–∏—Å–µ–ª –º–µ–Ω–µ–µ 1000 –¥–æ–±–∞–≤–ª—è–µ–º –≤–µ–¥—É—â–∏–µ –Ω—É–ª–∏
    let fileNameSuffix;
    if (tokenId < 10) {
      fileNameSuffix = `${tokenId}`;  // –û–¥–Ω–æ—Ä–∞–∑—Ä—è–¥–Ω—ã–µ —á–∏—Å–ª–∞ –±–µ–∑ –≤–µ–¥—É—â–∏—Ö –Ω—É–ª–µ–π (–∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª–µ)
    } else if (tokenId < 100) {
      fileNameSuffix = `00${tokenId}`;  // –î–ª—è –¥–≤—É–∑–Ω–∞—á–Ω—ã—Ö —á–∏—Å–µ–ª –¥–æ–±–∞–≤–ª—è–µ–º –¥–≤–∞ –≤–µ–¥—É—â–∏—Ö –Ω—É–ª—è
    } else if (tokenId < 1000) {
      fileNameSuffix = `0${tokenId}`;  // –î–ª—è —Ç—Ä–µ—Ö–∑–Ω–∞—á–Ω—ã—Ö —á–∏—Å–µ–ª –¥–æ–±–∞–≤–ª—è–µ–º –æ–¥–∏–Ω –≤–µ–¥—É—â–∏–π –Ω—É–ª—å
    } else {
      fileNameSuffix = `${tokenId}`;  // –î–ª—è –±–æ–ª—å—à–∏—Ö —á–∏—Å–µ–ª –Ω–µ—Ç –≤–µ–¥—É—â–∏—Ö –Ω—É–ª–µ–π
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞ –∏ –ø—É—Ç—å
    const fileName = `mutant_ape_${fileNameSuffix}.png`;
    const correctImagePath = `${IMAGE_PATH_PREFIX}${fileName}`;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    if (nft.image_path !== correctImagePath) {
      // –ü—É—Ç—å –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
      console.log(`üîÑ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è NFT #${nft.id} (Token ID: ${nft.token_id}):`);
      console.log(`   –î–æ: ${nft.image_path}`);
      console.log(`   –ü–æ—Å–ª–µ: ${correctImagePath}`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø—É—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      try {
        await client.query(
          'UPDATE nfts SET image_path = $1 WHERE id = $2',
          [correctImagePath, nft.id]
        );
        updatedCount++;
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—É—Ç–∏ –¥–ª—è NFT #${nft.id}:`, error);
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const fullFilePath = path.join(MUTANT_APE_DIR, fileName);
    
    // –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    if (!fs.existsSync(fullFilePath)) {
      // –ò—â–µ–º –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
      const existingImages = fs.readdirSync(MUTANT_APE_DIR)
        .filter(file => file.endsWith('.png'));
      
      if (existingImages.length > 0) {
        // –ë–µ—Ä–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        const sourceIndex = tokenId % existingImages.length;
        const sourceFile = existingImages[sourceIndex];
        const sourcePath = path.join(MUTANT_APE_DIR, sourceFile);
        
        try {
          // –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª
          fs.copyFileSync(sourcePath, fullFilePath);
          console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–æ–ø–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${fileName} (–∏–∑ ${sourceFile})`);
        } catch (error) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ –¥–ª—è ${fileName}:`, error);
        }
      }
    }
  }
  
  console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount} –ø—É—Ç–µ–π –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –∏–∑ ${nfts.length} NFT`);
  
  return updatedCount;
}

/**
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—É—Ç–∏ –≤ –º–æ–¥—É–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
 */
async function fixClientImageHandling() {
  console.log('üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ...');
  
  // –ü—É—Ç—å –∫ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–º—É —Ñ–∞–π–ª—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const imageFunctionPath = path.join(process.cwd(), 'client', 'src', 'lib', 'image-utils.ts');
  
  if (fs.existsSync(imageFunctionPath)) {
    // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞
    const content = fs.readFileSync(imageFunctionPath, 'utf8');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Mutant Ape
    if (!content.includes('mutant_ape_nft') || !content.includes('collection=mutant')) {
      console.log('‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ, —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Mutant Ape –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ');
      
      // –ù–µ –∏–∑–º–µ–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, —Ç–æ–ª—å–∫–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º
      console.log('   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ image-utils.ts');
    } else {
      console.log('‚úÖ –ö–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º');
    }
  } else {
    console.log('‚ùå –§–∞–π–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
}

/**
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
 */
async function fixServerImageHandling() {
  console.log('üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...');
  
  // –ü—É—Ç—å –∫ —Å–µ—Ä–≤–µ—Ä–Ω–æ–º—É —Ñ–∞–π–ª—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
  const nftServerPath = path.join(process.cwd(), 'server', 'nft-image-server.js');
  
  if (fs.existsSync(nftServerPath)) {
    console.log('‚úÖ –ù–∞—à–ª–∏ —Ñ–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π NFT');
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º, –Ω–æ –Ω–µ –∏–∑–º–µ–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    const content = fs.readFileSync(nftServerPath, 'utf8');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É Mutant Ape
    const hasMutantHandling = content.includes('mutant_ape');
    
    if (hasMutantHandling) {
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä–Ω—ã–π –∫–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É Mutant Ape');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤—ã–¥–µ–ª–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è Mutant Ape
      const hasSpecificMutantLogic = content.includes('isOfficialMutantApe') || 
                                    content.includes('isMutantApe');
      
      if (hasSpecificMutantLogic) {
        console.log('‚úÖ –°–µ—Ä–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –∏–º–µ–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É –¥–ª—è Mutant Ape');
      } else {
        console.log('‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –º–æ–∂–µ—Ç –Ω–µ –∏–º–µ—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–∏ –¥–ª—è Mutant Ape');
      }
    } else {
      console.log('‚ùå –°–µ—Ä–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É Mutant Ape');
    }
  } else {
    console.log('‚ùå –§–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π NFT –Ω–µ –Ω–∞–π–¥–µ–Ω');
  }
}

/**
 * –û—á–∏—â–∞–µ—Ç –∫—ç—à –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
 */
async function clearImageCache() {
  console.log('üßπ –û—á–∏—â–∞–µ–º –∫—ç—à –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
  
  // –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫—ç—à–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
  const cacheDirs = [
    path.join(process.cwd(), 'tmp', 'image-cache'),
    path.join(process.cwd(), 'cache', 'images'),
    path.join(process.cwd(), '.cache', 'images')
  ];
  
  let cacheCleared = false;
  
  for (const cacheDir of cacheDirs) {
    if (fs.existsSync(cacheDir)) {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –∫—ç—à–∞: ${cacheDir}`);
      
      try {
        const files = fs.readdirSync(cacheDir);
        
        // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç "mutant_ape" –≤ –∏–º–µ–Ω–∏
        let deletedCount = 0;
        for (const file of files) {
          if (file.includes('mutant_ape')) {
            const filePath = path.join(cacheDir, file);
            fs.unlinkSync(filePath);
            deletedCount++;
          }
        }
        
        if (deletedCount > 0) {
          console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${deletedCount} –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ ${cacheDir}`);
          cacheCleared = true;
        } else {
          console.log(`‚ÑπÔ∏è –ù–µ –Ω–∞–π–¥–µ–Ω—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è Mutant Ape –≤ ${cacheDir}`);
        }
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞ –≤ ${cacheDir}:`, error);
      }
    }
  }
  
  if (!cacheCleared) {
    console.log('‚ÑπÔ∏è –ù–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∫—ç—à–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
 */
async function validateFixes() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...');
  
  // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã
  const query = `
    SELECT n.id, n.token_id, n.image_path, n.name, c.name as collection_name
    FROM nfts n
    JOIN nft_collections c ON n.collection_id = c.id
    WHERE c.name LIKE '%Mutant%'
    LIMIT 10;
  `;
  
  const result = await client.query(query);
  const nfts = result.rows;
  
  console.log('üîé –ü—Ä–∏–º–µ—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö NFT:');
  nfts.forEach((nft, index) => {
    console.log(`${index + 1}. ID: ${nft.id}, Token: ${nft.token_id}`);
    console.log(`   –ü—É—Ç—å: ${nft.image_path}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–∏ —Ñ–æ—Ä–º–∞—Ç –ø—É—Ç–∏
    const isMutantPath = nft.image_path && nft.image_path.includes('mutant_ape');
    console.log(`   –§–æ—Ä–º–∞—Ç –ø—É—Ç–∏: ${isMutantPath ? '‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π' : '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π'}`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if (nft.image_path) {
      const localPath = path.join(process.cwd(), ...nft.image_path.split('/').filter(p => p));
      const fileExists = fs.existsSync(localPath);
      console.log(`   –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${fileExists ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`);
    }
    console.log('');
  });
}

/**
 * –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π Mutant Ape NFT...');
  
  try {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    await client.connect();
    
    // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    await backupMutantApeImages();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    ensureDirectoriesExist();
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ NFT –∫–æ–ª–ª–µ–∫—Ü–∏–∏ Mutant Ape
    const nfts = await getMutantApeNFTs();
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
    const updatedCount = await fixMutantApeImagePaths(nfts);
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
    await fixClientImageHandling();
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
    await fixServerImageHandling();
    
    // –û—á–∏—â–∞–µ–º –∫—ç—à –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    await clearImageCache();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    await validateFixes();
    
    console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    console.log(`üìä –ò—Ç–æ–≥–∏: –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ ${nfts.length} NFT, –æ–±–Ω–æ–≤–ª–µ–Ω–æ ${updatedCount} –ø—É—Ç–µ–π`);
    
    // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
    await client.end();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:', error);
    
    try {
      // –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
      await client.end();
    } catch (err) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
main().catch(console.error);