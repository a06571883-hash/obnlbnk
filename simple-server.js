/**
 * ะฃะฟัะพัะตะฝะฝัะน ัะตัะฒะตั ะดะปั ะฑััััะพะณะพ ะทะฐะฟััะบะฐ ะฟัะธะปะพะถะตะฝะธั
 */

import express from 'express';
import path from 'path';
import { fileURLToPath } from 'url';
import cors from 'cors';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const app = express();
const PORT = process.env.PORT || 5000;

// Middlewares
app.use(cors());
app.use(express.json({ limit: '50mb' }));
app.use(express.urlencoded({ extended: true, limit: '50mb' }));

// ะกัะฐัะธัะตัะบะธะต ัะฐะนะปั
app.use('/assets', express.static(path.join(__dirname, 'public/assets')));
app.use(express.static(path.join(__dirname, 'client/dist')));

// ะัะพััะตะนัะธะต API ะผะฐัััััั ะดะปั ะฟัะพะฒะตัะบะธ ัะฐะฑะพัั
app.get('/api/health', (req, res) => {
  res.json({ 
    status: 'ok', 
    message: 'ะกะตัะฒะตั ัะฐะฑะพัะฐะตั',
    timestamp: new Date().toISOString()
  });
});

app.get('/api/test', (req, res) => {
  res.json({ 
    message: 'ะขะตััะพะฒัะน ัะฝะดะฟะพะธะฝั ัะฐะฑะพัะฐะตั',
    environment: process.env.NODE_ENV || 'development'
  });
});

// Fallback ะดะปั SPA
app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, 'client/dist/index.html'));
});

// ะะฐะฟััะบ ัะตัะฒะตัะฐ
app.listen(PORT, '0.0.0.0', () => {
  console.log(`๐ ะฃะฟัะพัะตะฝะฝัะน ัะตัะฒะตั ะทะฐะฟััะตะฝ ะฝะฐ ะฟะพััั ${PORT}`);
  console.log(`๐ฑ ะคัะพะฝัะตะฝะด ะดะพัััะฟะตะฝ ะฟะพ ะฐะดัะตัั: http://localhost:${PORT}`);
  console.log(`๐ API ะดะพัััะฟะตะฝ ะฟะพ ะฐะดัะตัั: http://localhost:${PORT}/api/health`);
  console.log(`๐ ะกะตัะฒะตั ะฟัะธะฒัะทะฐะฝ ะบ 0.0.0.0 ะดะปั ะฒะฝะตัะฝะตะณะพ ะดะพัััะฟะฐ`);
});

export default app;