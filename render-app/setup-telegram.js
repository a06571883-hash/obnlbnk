/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram webhook –ø—Ä–∏ –¥–µ–ø–ª–æ–µ –Ω–∞ Render.com
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç webhook –Ω–∞ URL –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

import fetch from 'node-fetch';

async function setupTelegramWebhook() {
  console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram webhook –¥–ª—è Render.com...');
  
  // –ü–æ–ª—É—á–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const botToken = process.env.TELEGRAM_BOT_TOKEN;
  const renderUrl = process.env.RENDER_EXTERNAL_URL;
  const isRender = process.env.RENDER === 'true';
  const isProd = process.env.NODE_ENV === 'production';
  
  if (!botToken) {
    console.error('‚ùå –û—à–∏–±–∫–∞: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    console.error('   –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ Render.com');
    return;
  }
  
  if (!renderUrl) {
    console.error('‚ùå –û—à–∏–±–∫–∞: RENDER_EXTERNAL_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    console.error('   –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ Render.com');
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—Ç–∞–µ–º –ª–∏ –º—ã –Ω–∞ Render.com –≤ production
  if (!isRender || !isProd) {
    console.log('‚ö†Ô∏è –ù–µ –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –Ω–∞ Render.com, webhook –Ω–µ –±—É–¥–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
    console.log(`   isRender: ${isRender}, isProd: ${isProd}`);
    return;
  }
  
  try {
    // –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è webhook
    const webhookUrl = `${renderUrl}/webhook/${botToken}`;
    console.log(`–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º webhook –Ω–∞ URL: ${webhookUrl}`);
    
    // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–∏–π webhook (–µ—Å–ª–∏ –µ—Å—Ç—å)
    const deleteResponse = await fetch(`https://api.telegram.org/bot${botToken}/deleteWebhook`);
    const deleteData = await deleteResponse.json();
    
    if (!deleteData.ok) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ webhook: ${deleteData.description}`);
      return;
    }
    
    console.log('‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π webhook —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
    const setResponse = await fetch(`https://api.telegram.org/bot${botToken}/setWebhook`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        url: webhookUrl,
        allowed_updates: ['message', 'callback_query']
      })
    });
    
    const setData = await setResponse.json();
    
    if (!setData.ok) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook: ${setData.description}`);
      return;
    }
    
    console.log('‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º webhook
    const infoResponse = await fetch(`https://api.telegram.org/bot${botToken}/getWebhookInfo`);
    const infoData = await infoResponse.json();
    
    if (!infoData.ok) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook: ${infoData.description}`);
      return;
    }
    
    console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:');
    console.log(JSON.stringify(infoData.result, null, 2));
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ WebApp
    const setUrlResponse = await fetch(`https://api.telegram.org/bot${botToken}/setChatMenuButton`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        menu_button: {
          type: 'web_app',
          text: '–û—Ç–∫—Ä—ã—Ç—å BNAL Bank',
          web_app: { url: renderUrl }
        }
      })
    });
    
    const setUrlData = await setUrlResponse.json();
    
    if (!setUrlData.ok) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –º–µ–Ω—é –±–æ—Ç–∞: ${setUrlData.description}`);
    } else {
      console.log('‚úÖ –ú–µ–Ω—é –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
    const commandsResponse = await fetch(`https://api.telegram.org/bot${botToken}/setMyCommands`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        commands: [
          { command: '/start', description: '–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞' },
          { command: '/url', description: '–ü–æ–ª—É—á–∏—Ç—å URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è' }
        ]
      })
    });
    
    const commandsData = await commandsResponse.json();
    
    if (!commandsData.ok) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞: ${commandsData.description}`);
    } else {
      console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
    }
    
    console.log('üì± Telegram –±–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ Render.com!');
    console.log(`   URL: ${renderUrl}`);
    console.log(`   Webhook: ${webhookUrl}`);
    
  } catch (error) {
    console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Telegram webhook:');
    console.error(error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
setupTelegramWebhook().catch(console.error);